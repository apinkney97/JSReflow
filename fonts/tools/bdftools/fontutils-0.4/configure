:
# Guess values for system-dependent variables and create Makefiles.
# Generated automatically by autoconf.
# Copyright (C) 1991 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

# Usage: configure [--srcdir=DIR] [--host=HOST] [--gas] [--nfp] [TARGET]
# All args except --srcdir=DIR are ignored.

trap 'rm -f conftest conftest.c; exit 1' 1 3 15

set +u # Make sure unset variables are ok.

for arg in $*; do
  # Handle --srcdir with a space before the argument.
  if test x$next_srcdir = xyes; then srcdir=$arg; next_srcdir=
  # Handle --host with a space before the argument.
  elif test x$next_host = xyes; then next_host=
  else
    case $arg in
     +srcdir=* | --srcdir=* | --srcdi=* | --srcd=* | --src=* | --sr=* | --s=*)
	srcdir=`echo $arg | sed 's/[+-]*s[a-z]*=//'` ;;
     +srcdir | --srcdir | --srcdi | --srcd | --src | --sr | --s)
	next_srcdir=yes ;;
     +host=* | --host=* | --hos=* | --ho=* | --h=*) ;;
     +host | --host | --hos | --ho | --h)
	next_host=yes ;;
     +gas | --gas | --ga | --g) ;;
     +nfp | --nfp | --nf | --n) ;;
     *) ;;
    esac
  fi
done

INCLUDEDIR=${INCLUDEDIR-/usr/include}

rm -f conftest conftest.c
compile='$CC $DEFS conftest.c -o conftest $LIBS >/dev/null 2>&1'

# A filename unique to this package, relative to the directory that
# configure is in, which we can look for to find out if srcdir is correct.
unique_file=limn/fit.c

# Makefile rules whose targets are searched for in VPATH need to use $<.
# However, old makes do not support it, so we use a combination
# construction in Makefile.in: `$file<'.
# If srcdir is `.', we use sed to change that to `file' for old makes.
# Otherwise, we use sed to change it to `$<'.
# vpsub is the sed program, which changes `$file<' to one or the other.
vpsub='s,\$\([-./a-zA-Z0-9_]*\)<,\1,g'
# srsub changes `@srcdir@' in Makefile.in into either `.' or the path
# of the top of the source tree for the package.
srsub='s,@srcdir@[-./a-zA_Z0-9_]*,.,'

# Find the source files, if location was not specified.
if test x$srcdir = x; then
  srcdirdefaulted=yes; srcdir=.
  if test ! -r $unique_file; then srcdir=..; fi
fi
if test ! -r $srcdir/$unique_file; then
  if test x$srcdirdefaulted = xyes; then
    echo "configure: Can not find sources in \`.' or \`..'." 1>&2
  else
    echo "configure: Can not find sources in \`${srcdir}'." 1>&2
  fi
  exit 1
fi
if test $srcdir != .; then
  VPATH='VPATH = $(srcdir)'
  case $srcdir in
    /*|~*) ;;
    *) srcdir=`pwd`/$srcdir ;; # Make relative path absolute.
  esac
  vpsub='s,\$\([-./a-zA-Z0-9_]*\)<,\$<,g'
  srsub="s,@srcdir@,$srcdir,"
fi


# The Bourne shell writes "command not found" to /dev/tty, so if we get
# a usage message on stderr, we have the program.
#
# ksh and zsh write "command not found" to stderr, but test -n does not
# want any output if there is no program.  So we use the `type' builtin
# instead for them (and bash).
if test "$RANDOM" = "$RANDOM"; then
  checkfor='test -n "`$checkprog $checkargs 2>&1`"'
else
  checkfor='type $checkprog >/dev/null'
fi



compile='rm -f conftest.h conftest.x;
  echo "$DEFS" > conftest.h;
  cat conftest.h conftest.c > conftest.x;
  rm -f conftest.c conftest.h;
  mv conftest.x conftest.c;
  $CC conftest.c -o conftest $LIBS >/dev/null 2>&1'


# We must have gcc.
echo checking for gcc
checkprog=gcc checkargs=''
test -z "$CC" && eval $checkfor && CC='gcc -O'
CC=${CC-cc}

if echo $CC | grep -s '^gcc'
then :
else
  echo "Warning: these programs are written in GNU C,"
  echo "so you need to have gcc."
fi
echo checking for install
# Make sure to not get the incompatible SysV /etc/install.
if test -z "$INSTALL" || test -z "$INSTALL_PROGRAM" || test -z "$INSTALL_DATA"
then
  saveifs="$IFS"; IFS="$IFS:"
  for dir in $PATH; do
    test -z "$dir" && dir=.
    if test $dir != /etc && test -f $dir/install; then
      test -z "$INSTALL" && INSTALL="$dir/install -c"
      test -z "$INSTALL_PROGRAM" && INSTALL_PROGRAM="$dir/install -c"
      test -z "$INSTALL_DATA" && INSTALL_DATA="$dir/install -c -m 644"
      break
    fi
  done
  IFS="$saveifs"
fi
INSTALL=${INSTALL-cp}
INSTALL_PROGRAM=${INSTALL_PROGRAM-cp}
INSTALL_DATA=${INSTALL_DATA-cp}

echo checking for ranlib
checkprog=ranlib checkargs='/dev/null'
test -z "$RANLIB" && eval $checkfor && RANLIB='ranlib '
RANLIB=${RANLIB-true}


echo checking for POSIXized ISC
if test -d /etc/conf/kconfig.d &&
  grep _POSIX_VERSION /usr/include/sys/unistd.h >/dev/null 2>&1
then
  isc=t
  case "$CC" in
  gcc*) CC="$CC -posix" ;;
  *) CC="$CC -Xp" ;;
  esac
fi

echo checking for ISC X window libraries
if test -n "$isc"
then
  wlibs="$wlibs -shlib -lnsl_s -linet"
fi


echo checking for directory library header
dirheader=sys/dir.h
if test -f $INCLUDEDIR/dirent.h; then
  DEFS="${DEFS}#define DIRENT 
" dirheader=dirent.h
elif test -f $INCLUDEDIR/sys/ndir.h; then
  DEFS="${DEFS}#define SYSNDIR 
" dirheader=sys/ndir.h
fi
echo checking for "void.*closedir" in "$dirheader"
grep 'void.*closedir' $INCLUDEDIR/$dirheader >/dev/null 2>&1 && DEFS="${DEFS}#define VOID_CLOSEDIR 
"

echo checking for limits.h
test -f $INCLUDEDIR/limits.h || DEFS="${DEFS}#define LIMITS_H_MISSING 
"

echo checking for memcpy in memory.h only
if grep -s memcpy $INCLUDEDIR/string.h
then :
elif test -r $INCLUDEDIR/memory.h
then DEFS="${DEFS}#define NEED_MEMORY_H 
"
fi

echo checking for ANSI C header files
test -r $INCLUDEDIR/stdlib.h && test -r $INCLUDEDIR/string.h &&
  test -r $INCLUDEDIR/limits.h && DEFS="${DEFS}#define STDC_HEADERS 
"

echo checking for unistd.h
test -f $INCLUDEDIR/unistd.h && DEFS="${DEFS}#define HAVE_UNISTD_H 
"

echo checking for BSD string and memory functions
echo "#include <strings.h>
main() { exit(0); } t() { rindex(0, 0); bzero(0, 0); }" > conftest.c
eval $compile
if test -s conftest && ./conftest 2>/dev/null; then :
else
  DEFS="${DEFS}#define USG 
"
fi
rm -f conftest conftest.c

echo checking for X11 headers and libraries
# We only need to rerun the preprocessor, so don't bother with $compile.
echo "#include <X11/Xaw/Box.h>" > conftest.c
if $CC -E conftest.c >/dev/null 2>&1
then :
else
  dir=""
  if test -r /usr/local/include/X11/Xaw/Box.h
  then dir=/usr/local/include
  elif test -r /usr/lpp/X11/Xamples/include/Box.h
  then dir=/usr/lpp/X11/Xamples/include
  fi
  test -n "$dir" && xincludedir=-I$dir
  
fi
rm -f conftest.c
# Now check for the libraries.
dir1=""
if test -r /usr/local/lib/libXaw.a
then dir1=/usr/local/lib
elif test -r /usr/lpp/X11/Xamples/lib/Xaw/libXaw.a
then dir1=/usr/lpp/X11/Xamples/lib/Xaw
fi
dir2=""
if test -r /usr/lpp/X11/Xamples/lib/Xmu/libXmu.a
then dir2=/usr/lpp/X11/Xamples/lib/Xmu
fi
test -n "$dir1" && xlibdir=-L$dir1
test -n "$dir2" && xlibdir="$xlibdir -L$dir2"



echo checking for directory prefix using gcc
if test -z "$prefix"
then
  # Guess /usr/local if they haven't set it.
  prefix=/usr/local
  saveifs="$IFS"
  IFS="$IFS:"
  for dir in $PATH
  do
    test -z "$dir" && dir=.
    if test $dir != . -a -f $dir/gcc
    then
      # Do all systems have dirname?
      prefix=`dirname $dir`
      break
    fi
  done
  IFS="$saveifs"
fi



# This will generate `Makefile'(s), `config.status', and our header file.
trap 'for dir in .; do rm -f $dir/Makefile; done; rm -f config.status include/c-auto.h; exit 1' 1 3 15

for dir in .; do
  test -d $dir || mkdir $dir
  echo creating $dir/Makefile
  echo '# Generated automatically from Makefile.in by configure.' > $dir/Makefile
  sed -e "
$vpsub
$srsub
s,@VPATH@,$VPATH,
s,@DEFS@,`echo $DEFS`,
s,@LIBS@,`echo $LIBS`,
s,@CC@,`echo $CC`,
s,@INSTALL@,`echo $INSTALL`,
s,@INSTALL_PROGRAM@,`echo $INSTALL_PROGRAM`,
s,@INSTALL_DATA@,`echo $INSTALL_DATA`,
s,@RANLIB@,`echo $RANLIB`,
s,@wlibs@,`echo $wlibs`,
s,@LDFLAGS@,`echo $LDFLAGS`,
s,@xincludedir@,`echo $xincludedir`,
s,@xlibdir@,`echo $xlibdir`,
s,@prefix@,`echo $prefix`,
" $srcdir/$dir/Makefile.in >> $dir/Makefile
done

echo creating include/c-auto.h
echo "/* include/c-auto.h: generated by configure.  */
$DEFS" > include/c-auto.h

echo creating config.status
echo "\
DEFS=\"$DEFS\"
LIBS=\"$LIBS\"
CC=\"$CC\"
INSTALL=\"$INSTALL\"
INSTALL_PROGRAM=\"$INSTALL_PROGRAM\"
INSTALL_DATA=\"$INSTALL_DATA\"
RANLIB=\"$RANLIB\"
wlibs=\"$wlibs\"
LDFLAGS=\"$LDFLAGS\"
xincludedir=\"$xincludedir\"
xlibdir=\"$xlibdir\"
prefix=\"$prefix\"
" > config.status

