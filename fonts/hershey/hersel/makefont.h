"%!",
"/HersheyBuildDict 10 dict def",
"",
"/BuildHersheyChar {",
"	/char exch def",
"	/fontdict exch def",
"",
"	/cd fontdict /CharData get fontdict /Encoding get char get get def",
"",
"	/llx 99 def /lly 99 def /urx -99 def /ury -99 def",
"",
"	/isx true def",
"",
"	cd 2 get {",
"		isx {",
"			dup 32 eq {",
"				pop",
"			} {",
"				82 sub cd 0 get sub",
"",
"				dup llx lt {",
"					dup /llx exch def",
"				} if",
"				dup urx gt {",
"					dup /urx exch def",
"				} if",
"				pop",
"",
"				/isx false def",
"			} ifelse",
"		} {",
"			neg 91 add",
"",
"			dup lly lt {",
"				dup /lly exch def",
"			} if",
"			dup ury gt {",
"				dup /ury exch def",
"			} if",
"			pop",
"",
"			/isx true def",
"		} ifelse",
"	} forall",
"",
"	cd 1 get cd 0 get sub 0 llx 1 sub lly 1 sub urx 1 add ury 1 add setcachedevice",
"",
"	/domove true def",
"	/isx true def",
"",
"	cd 2 get {",
"		isx {",
"			dup 32 eq {",
"				pop",
"				/domove true def",
"			} {",
"				82 sub cd 0 get sub",
"				/isx false def",
"			} ifelse",
"		} {",
"			neg 91 add",
"			domove {",
"				moveto",
"				/domove false def",
"			} {",
"				lineto",
"			} ifelse",
"",
"			/isx true def",
"		} ifelse",
"	} forall",
"",
"",
"	1 setmiterlimit 1 setlinejoin 1 setlinecap",
"	fontdict /PenWidth get setlinewidth stroke",
"} bind def",
"",
"/MakeHersheyFont {",
"	10 dict dup begin",
"	exch /ItalicAngle exch def",
"	exch /PenWidth exch def",
"	exch /FontName exch def",
"	exch /CharData exch def",
"",
"	/FontType 3 def",
"	/FontMatrix [1 33 div 0 ItalicAngle neg dup sin exch cos div 33 div 1 33 div 0 0] def",
"",
"	/Encoding StandardEncoding def",
"	/BuildChar {HersheyBuildDict begin BuildHersheyChar end} def",
"	/FontBBox [-10 -10 30 30] def",
"",
"	FontName end exch definefont",
"} bind def",
